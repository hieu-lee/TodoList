// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoList.Data;

namespace TodoList.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20210403055949_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("AccountToDoList", b =>
                {
                    b.Property<string>("Ownersusername")
                        .HasColumnType("TEXT");

                    b.Property<string>("listsListId")
                        .HasColumnType("TEXT");

                    b.HasKey("Ownersusername", "listsListId");

                    b.HasIndex("listsListId");

                    b.ToTable("AccountToDoList");
                });

            modelBuilder.Entity("TodoList.Models.Account", b =>
                {
                    b.Property<string>("username")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("username");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TodoList.Models.ToDoItem", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeDispose")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToDoListListId")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("ToDoListListId");

                    b.ToTable("ToDoItem");
                });

            modelBuilder.Entity("TodoList.Models.ToDoList", b =>
                {
                    b.Property<string>("ListId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ListId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("AccountToDoList", b =>
                {
                    b.HasOne("TodoList.Models.Account", null)
                        .WithMany()
                        .HasForeignKey("Ownersusername")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoList.Models.ToDoList", null)
                        .WithMany()
                        .HasForeignKey("listsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoList.Models.ToDoItem", b =>
                {
                    b.HasOne("TodoList.Models.ToDoList", null)
                        .WithMany("Items")
                        .HasForeignKey("ToDoListListId");
                });

            modelBuilder.Entity("TodoList.Models.ToDoList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
