@using TodoList.Models

@if (item.Completed)
{
    <div style="background-color: #A79FEF;">
        <div style="display: flex; justify-content: space-between;">
            <div>
                <MudCheckBox @onclick="ChangeCompletion" @bind-Checked="@item.Completed" Color="Color.Primary"></MudCheckBox><span style="margin: 0 5px;"><del>@item.Title</del></span>
            </div>
            <div style="margin-right: 12px; margin-top: 12px;">
                <img @onclick="ShowMore" src="more.png" style="width: 30px; height: 30px; cursor: pointer;" />
            </div>
        </div>
        <div style="height: @ContentHeight; overflow-y: hidden; transition: height 0.5s;">
            <MudTextField T="string" Variant="Variant.Outlined" @bind-Value="@item.Content" Lines="3" FullWidth="true" />
        </div>
    </div>
    <div style="background-color: red; text-align: center; height: @DeleteHeight; transition: height 0.5s; cursor: pointer;">
        <img style="width: 30px; height: 30px;" src="trash.png" />
    </div>
}
else
{
    <div>
        <div style="display: flex; justify-content: space-between;">
            <div>
                <MudCheckBox @bind-Checked="@item.Completed" Color="Color.Primary" @onclick="ChangeCompletion"></MudCheckBox><span style="margin: 0 5px;">@item.Title</span>
            </div>
            <div style="margin-right: 12px; margin-top: 12px;">
                <img @onclick="ShowMore" src="more.png" style="width: 30px; height: 30px; cursor: pointer;" />
            </div>
        </div>
        <div>
            <span style="margin-right: 10px; margin-left: 15px;">Important</span><MudSwitch @bind-Checked="@item.Important" Color="Color.Secondary" @onclick="ImportantChange" Style="margin-bottom: 0;" />
        </div>
        <div style="height: @ContentHeight; overflow-y: hidden; transition: height 0.5s;">
            <MudTextField T="string" Variant="Variant.Outlined" @bind-Value="@item.Content" Lines="3" FullWidth="true" />
        </div>
    </div>
    <div style="background-color: red; text-align: center; height: @DeleteHeight; transition: height 0.5s; cursor: pointer;" @onclick="DeleteItem">
        <img style="width: 30px; height: 30px;" src="trash.png" />
    </div>
}


@code {
    [Parameter]
    public ToDoItem item { get; set; }
    [Parameter]
    public ToDoList list { get; set; }
    [Parameter]
    public HashSet<ToDoItem> ImportantItems { get; set; }
    [Parameter]
    public HashSet<ToDoItem> UncompletedItems { get; set; }
    [Parameter]
    public HashSet<ToDoItem> CompletedItems { get; set; }
    private string DeleteHeight = "0";
    private string ContentHeight = "0";
    private string PlaceHolder = "Write a todo item...";

        private void ChangeCompletion()
    {
        if (!item.Completed)
        {
            CompletedItems.Add(item);
            if (item.Important)
            {
                ImportantItems.Remove(item);
            }
            else
            {
                UncompletedItems.Remove(item);
            }
        }
        else
        {
            CompletedItems.Remove(item);
            if (item.Important)
            {
                ImportantItems.Add(item);
            }
            else
            {
                UncompletedItems.Add(item);
            }
        }
    }

    private void ImportantChange()
    {
        if (!item.Important)
        {
            ImportantItems.Add(item);
            UncompletedItems.Remove(item);
            StateHasChanged();
        }
        else
        {
            ImportantItems.Remove(item);
            UncompletedItems.Add(item);
            StateHasChanged();
        }
    }

    private void DeleteItem()
    {
        list.Items.Remove(item);
        if (item.Completed)
        {
            CompletedItems.Remove(item);
        }
        else if (item.Important)
        {
            ImportantItems.Remove(item);
        }
        else
        {
            UncompletedItems.Remove(item);
        }
    }

    private void ShowMore()
    {
        if (DeleteHeight == "0")
        {
            ContentHeight = "100px";
            DeleteHeight = "30px";
        }
        else
        {
            ContentHeight = "0";
            DeleteHeight = "0";
        }
    }
}
